<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mpu6050_8c" kind="file" language="C++">
    <compoundname>mpu6050.c</compoundname>
    <includes refid="mpu6050_8h" local="yes">mpu6050.h</includes>
    <includes refid="i2cdev_8h" local="yes">i2cdev.h</includes>
    <incdepgraph>
      <node id="17">
        <label>esp_idf_lib_helpers.h</label>
        <link refid="esp__idf__lib__helpers_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>i2cdev.h</label>
        <link refid="i2cdev_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mpu6050.h</label>
        <link refid="mpu6050_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>pin_defs.h</label>
        <link refid="pin__defs_8h"/>
      </node>
      <node id="1">
        <label>src/mpu6050.c</label>
        <link refid="mpu6050_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>driver/gpio.h</label>
      </node>
      <node id="11">
        <label>driver/i2c.h</label>
      </node>
      <node id="7">
        <label>esp_attr.h</label>
      </node>
      <node id="9">
        <label>esp_err.h</label>
      </node>
      <node id="18">
        <label>esp_idf_version.h</label>
      </node>
      <node id="8">
        <label>esp_log.h</label>
      </node>
      <node id="13">
        <label>esp_timer.h</label>
      </node>
      <node id="10">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="16">
        <label>freertos/semphr.h</label>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>sdkconfig.h</label>
      </node>
      <node id="19">
        <label>soc/i2c_reg.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="mpu6050_8c_1a715099a8b0078a88a0045d9b57c38260" prot="public" static="no">
        <name>MIN_ACCE_ERROR</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="31" column="9" bodyfile="src/mpu6050.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu6050_8c_1a7f8f0d32f0f2e4dd8ca1eca78b697b7f" prot="public" static="no">
        <name>MIN_GYRO_ERROR</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="32" column="9" bodyfile="src/mpu6050.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu6050_8c_1a1e4d2dba5c2a7c93721603af24528263" prot="public" static="no">
        <name>MAX_CALIBRATION_ATTEMPTS</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="33" column="9" bodyfile="src/mpu6050.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu6050_8c_1a22c3bf9b7c8789d18e5075f356366ad6" prot="public" static="no">
        <name>G_RAW_VALUE</name>
        <initializer>16384</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="34" column="9" bodyfile="src/mpu6050.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mpu6050_8c_1ab48a7997f8dce4ee930a82b44e4c9e70" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG_MPU</definition>
        <argsstring></argsstring>
        <name>TAG_MPU</name>
        <initializer>= &quot;mpu_6050&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="28" column="19" bodyfile="src/mpu6050.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpu6050_8c_1ab5c2255135e59c4e429780ab1778fa48" prot="public" static="yes" mutable="no">
        <type><ref refid="structi2c__dev__t" kindref="compound">i2c_dev_t</ref></type>
        <definition>i2c_dev_t mpu6050_dev_t</definition>
        <argsstring></argsstring>
        <name>mpu6050_dev_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="29" column="18" bodyfile="src/mpu6050.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpu6050_8c_1af30e274c62253ed09984a63cee4511df" prot="public" static="yes" mutable="no">
        <type>int16_t</type>
        <definition>int16_t acce_raw_value_offset[BUFF_SIZE/2]</definition>
        <argsstring>[BUFF_SIZE/2]</argsstring>
        <name>acce_raw_value_offset</name>
        <initializer>= {0, 0, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="36" column="16" bodyfile="src/mpu6050.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpu6050_8c_1aba4f6343f1ca9d3ecf8daf0d17effedf" prot="public" static="yes" mutable="no">
        <type>int16_t</type>
        <definition>int16_t gyro_raw_value_offset[BUFF_SIZE/2]</definition>
        <argsstring>[BUFF_SIZE/2]</argsstring>
        <name>gyro_raw_value_offset</name>
        <initializer>= {0, 0, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="36" column="39" bodyfile="src/mpu6050.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mpu6050_8c_1adbeb61fe3c40b09ee1b6de91f21cb6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t i2c_master_init</definition>
        <argsstring>(void)</argsstring>
        <name>i2c_master_init</name>
        <briefdescription>
<para>Initialise the ESP32 I2C Driver in Master Mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>esp_err_t returns ESP_OK if I2C driver initialised properly, ESP_ERR_INVALID_ARG for Parameter error, ESP_FAIL Driver for install error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="39" column="11" bodyfile="src/mpu6050.c" bodystart="39" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1a044ec3e6d6e04c8c1624a2f89ac4d7ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t enable_mpu6050</definition>
        <argsstring>(void)</argsstring>
        <name>enable_mpu6050</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialise MPU-6050 (by sending the appropriate queued commands); Refer this for more information: <ulink url="https://invensense.tdk.com/wp-content/uploads/2015/02/MPU-6000-Datasheet1.pdf">https://invensense.tdk.com/wp-content/uploads/2015/02/MPU-6000-Datasheet1.pdf</ulink>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>esp_err_t returns ESP_OK if MPU-6050 initialised successfully, else the appropriate error code Refer this for more info on ESP32 I2C Error codes: <ulink url="https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/i2c.html">https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/i2c.html</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="54" column="11" bodyfile="src/mpu6050.c" bodystart="54" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1a37ca4429a23f8b7da14122cc381516b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t mpu6050_read_acce</definition>
        <argsstring>(uint8_t *data_rd, size_t size)</argsstring>
        <name>mpu6050_read_acce</name>
        <param>
          <type>uint8_t *</type>
          <declname>data_rd</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Get the accelerometer raw values (Ax, Ay, Az) into an 8-bit array Note that these raw values are actually 16-bit, split into MSB (Byte) and LSB (Byte), sent one after the other. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_rd</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer array for storing raw values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer array (6 in our case) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t returns ESP_OK if acceleromter read successfully, else the appropriate error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="88" column="11" bodyfile="src/mpu6050.c" bodystart="88" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1a6a709a3acda468f8ec109f09a3148a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t mpu6050_read_gyro</definition>
        <argsstring>(uint8_t *data_rd, size_t size)</argsstring>
        <name>mpu6050_read_gyro</name>
        <param>
          <type>uint8_t *</type>
          <declname>data_rd</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Get the gyroscope raw values (Gx, Gy, Gz) into an 8-bit array Note that these raw values are actually 16-bit, split into MSB (Byte) and LSB (Byte), sent one after the other. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_rd</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer array for storing raw values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer array (6 in our case) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t returns ESP_OK if gyroscope read successfully, else the appropriate error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="103" column="11" bodyfile="src/mpu6050.c" bodystart="103" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1abb35efd200ff172bedad87a7ec590c7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void combine_msb_lsb_raw_data</definition>
        <argsstring>(uint8_t *buf_1, int16_t *buf_2)</argsstring>
        <name>combine_msb_lsb_raw_data</name>
        <param>
          <type>uint8_t *</type>
          <declname>buf_1</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>buf_2</declname>
        </param>
        <briefdescription>
<para>Combine two 8-bit values to a 16-bit one Note that EVEN indices in the input buffer represent the MSB (Byte) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf_1</parametername>
</parameternamelist>
<parameterdescription>
<para>8-bit Input array of size 6 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_2</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit Output array of size 3 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="118" column="6" bodyfile="src/mpu6050.c" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1aca3594a71e8ba8621f3968ee93cc457e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compute_acce_angle</definition>
        <argsstring>(int16_t ax, int16_t ay, int16_t az, float *acce_angle)</argsstring>
        <name>compute_acce_angle</name>
        <param>
          <type>int16_t</type>
          <declname>ax</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>ay</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>az</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>acce_angle</declname>
        </param>
        <briefdescription>
<para>Compute the Euler angle (Pitch and Roll) from the accelerometer raw values Axes and Angles - X: Roll, Y: Pitch, Z: Yaw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ax</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw accelerometer value (X-axis) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ay</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw accelerometer value (Y-axis) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>az</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw accelerometer value (Z-axis) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acce_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Resultant angle array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="128" column="6" bodyfile="src/mpu6050.c" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1a4b805f4cb3c30a323969abe87414ea90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compute_gyro_angle</definition>
        <argsstring>(int16_t gx, int16_t gy, int16_t gz, float dt, float *gyro_angle)</argsstring>
        <name>compute_gyro_angle</name>
        <param>
          <type>int16_t</type>
          <declname>gx</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>gy</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>gz</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>gyro_angle</declname>
        </param>
        <briefdescription>
<para>Compute the Euler angle (Pitch and Roll) from the gyroscope raw values Axes and Angles - X: Roll, Y: Pitch, Z: Yaw More on this here: <ulink url="https://philsal.co.uk/projects/imu-attitude-estimation">https://philsal.co.uk/projects/imu-attitude-estimation</ulink>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gx</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw gyroscope value (X-axis) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gy</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw gyroscope value (Y-axis) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gz</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw gyroscope value (Z-axis) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Sampling time for gyroscope readings (interval between 2 readings) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gyro_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Resultant angle array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="135" column="6" bodyfile="src/mpu6050.c" bodystart="135" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1a7d1dcecaa06dcaa7586e8802546ab65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t read_mpu6050_raw</definition>
        <argsstring>(int16_t *acce_raw_value, int16_t *gyro_raw_value)</argsstring>
        <name>read_mpu6050_raw</name>
        <param>
          <type>int16_t *</type>
          <declname>acce_raw_value</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>gyro_raw_value</declname>
        </param>
        <briefdescription>
<para>A wrapper for reading the 8-bit raw values from MPU and then combining them to their final form i.e. 16-bit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acce_raw_value</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit array for storing the accelerometer raw values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gyro_raw_value</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit array for storing the gyroscope raw values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t returns ESP_OK if successful, else the appropriate error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="152" column="11" bodyfile="src/mpu6050.c" bodystart="152" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1a43b01d95c708717047b47d408a606323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void complementary_filter</definition>
        <argsstring>(int16_t *acce_raw_value, int16_t *gyro_raw_value, float *complementary_angle, float *mpu_offset)</argsstring>
        <name>complementary_filter</name>
        <param>
          <type>int16_t *</type>
          <declname>acce_raw_value</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>gyro_raw_value</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>complementary_angle</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>mpu_offset</declname>
        </param>
        <briefdescription>
<para>Fuse the gyroscope and accelerometer angle in a complementary fashion More on this here: <ulink url="https://robotics.stackexchange.com/questions/10746/complimentary-filter-issues">https://robotics.stackexchange.com/questions/10746/complimentary-filter-issues</ulink>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acce_raw_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw values from the accelerometer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gyro_raw_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw values from the gyroscope </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>complementary_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Resultant fused and filtered angle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mpu_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of the MPU (accelerometer) at rest position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="167" column="6" bodyfile="src/mpu6050.c" bodystart="167" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1aad4ab5073aa1052f269ac1327fc0b584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t avg_sensors</definition>
        <argsstring>(int16_t *acce_raw_value_avg, int16_t *gyro_raw_value_avg, const int16_t *acce_offs, const int16_t *gyro_offs)</argsstring>
        <name>avg_sensors</name>
        <param>
          <type>int16_t *</type>
          <declname>acce_raw_value_avg</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>gyro_raw_value_avg</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>acce_offs</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>gyro_offs</declname>
        </param>
        <briefdescription>
<para>Helper function for the function <ref refid="mpu6050_8h_1afb2330f2330e6a13a16e271648954709" kindref="member">calibrate_mpu6050()</ref> to calculate the average of the raw values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acce_raw_value_avg</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array of accelerometer raw values (passed by reference) to be filled by the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gyro_raw_value_avg</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array of gyroscope raw values (passed by reference) to be filled by the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acce_offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to be applied to the accelerometer raw values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gyro_offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to be applied to the gyroscope raw values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t returns ESP_OK if successful, else ESP_FAIL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="202" column="11" bodyfile="src/mpu6050.c" bodystart="202" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1afb2330f2330e6a13a16e271648954709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t calibrate_mpu6050</definition>
        <argsstring>()</argsstring>
        <name>calibrate_mpu6050</name>
        <briefdescription>
<para>Function to calculate the MPU offset for raw values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>esp_err_t returns ESP_OK if successful, else ESP_FAIL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="232" column="11" bodyfile="src/mpu6050.c" bodystart="232" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="mpu6050_8c_1a2103bceaa1a91be4c8bdbe49cbc22c34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t read_mpu6050</definition>
        <argsstring>(float *euler_angle, float *mpu_offset)</argsstring>
        <name>read_mpu6050</name>
        <param>
          <type>float *</type>
          <declname>euler_angle</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>mpu_offset</declname>
        </param>
        <briefdescription>
<para>The ultimate function (application ready); takes in the input raw values and initial conditions and gives out the complementary pitch and roll angles. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>euler_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array of angles to store the results in (passed by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mpu_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial conditions for the accelerometer and gyroscope (Angle at rest position) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t returns ESP_OK if successful, else the appropriate error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mpu6050.c" line="286" column="11" bodyfile="src/mpu6050.c" bodystart="286" bodyend="302"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/><sp/>2021<sp/>Society<sp/>of<sp/>Robotics<sp/>and<sp/>Automation</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mpu6050_8h" kindref="compound">mpu6050.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="i2cdev_8h" kindref="compound">i2cdev.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG_MPU<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mpu_6050&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structi2c__dev__t" kindref="compound">i2c_dev_t</ref><sp/>mpu6050_dev_t;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_ACCE_ERROR<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_GYRO_ERROR<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_CALIBRATION_ATTEMPTS<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>G_RAW_VALUE<sp/>16384<sp/><sp/></highlight><highlight class="comment">//accelerometer<sp/>reads<sp/>this<sp/>value<sp/>for<sp/>1<sp/>g<sp/>acceleration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int16_t<sp/>acce_raw_value_offset[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2]<sp/>=<sp/>{0,<sp/>0,<sp/>0},<sp/>gyro_raw_value_offset[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>I2C<sp/>bus<sp/>and<sp/>install<sp/>driver<sp/>to<sp/>specified<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">esp_err_t<sp/><ref refid="mpu6050_8c_1adbeb61fe3c40b09ee1b6de91f21cb6ae" kindref="member">i2c_master_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pin__defs_8h_1a763ffd798508592c5092ac77daa5a659" kindref="member">CHECK</ref>(<ref refid="group__i2cdev_1ga8a96ea2cf13f4b50a9f5d5e17f40e01b" kindref="member">i2cdev_init</ref>());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu6050_dev_t.<ref refid="structi2c__dev__t_1a4b469f10acfaf5675d77fbe218c2ebe2" kindref="member">port</ref><sp/>=<sp/><ref refid="mpu6050_8h_1aab9e642b6200f95fcbd2ad7466aaa2d3" kindref="member">I2C_MASTER_NUM</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu6050_dev_t.<ref refid="structi2c__dev__t_1a84ad7180602cb8e36b38c29e5b1c86c6" kindref="member">addr</ref><sp/>=<sp/><ref refid="mpu6050_8h_1ad4d6255d8f7e5dc770e773b787977508" kindref="member">MPU6050_ADDR</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu6050_dev_t.<ref refid="structi2c__dev__t_1ab070791328671f783f9d6d45af3c4c24" kindref="member">cfg</ref>.mode<sp/>=<sp/>I2C_MODE_MASTER;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu6050_dev_t.<ref refid="structi2c__dev__t_1ab070791328671f783f9d6d45af3c4c24" kindref="member">cfg</ref>.sda_io_num<sp/>=<sp/><ref refid="mpu6050_8h_1af47631d568bba17edf9d1ea042602bb6" kindref="member">I2C_MASTER_SDA_IO</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu6050_dev_t.<ref refid="structi2c__dev__t_1ab070791328671f783f9d6d45af3c4c24" kindref="member">cfg</ref>.scl_io_num<sp/>=<sp/><ref refid="mpu6050_8h_1a033b5e8a30541fe4ff939a62fdb7a43d" kindref="member">I2C_MASTER_SCL_IO</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu6050_dev_t.<ref refid="structi2c__dev__t_1ab070791328671f783f9d6d45af3c4c24" kindref="member">cfg</ref>.master.clk_speed<sp/>=<sp/><ref refid="mpu6050_8h_1a5c22ca4de37a83a59014e48b0a0b043d" kindref="member">I2C_MASTER_FREQ_HZ</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__i2cdev_1ga1c3a8d47ff8f1c985d6e1d98d668eb3d" kindref="member">i2c_dev_create_mutex</ref>(&amp;mpu6050_dev_t);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialise<sp/>and<sp/>power<sp/>ON,<sp/>MPU6050</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">esp_err_t<sp/><ref refid="mpu6050_8c_1a044ec3e6d6e04c8c1624a2f89ac4d7ec" kindref="member">enable_mpu6050</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pin__defs_8h_1a763ffd798508592c5092ac77daa5a659" kindref="member">CHECK</ref>(<ref refid="mpu6050_8c_1adbeb61fe3c40b09ee1b6de91f21cb6ae" kindref="member">i2c_master_init</ref>());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1ga097ee23eb474674923704d81d376e646" kindref="member">I2C_DEV_TAKE_MUTEX</ref>(&amp;mpu6050_dev_t);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Clock<sp/>Source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>value;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1gaeb71e2a5bb188971fa26aa14da35fad7" kindref="member">I2C_DEV_CHECK</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="group__i2cdev_1gae8b4a6110cdc2d2e47b2214285ce59fc" kindref="member">i2c_dev_read_reg</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="mpu6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/>&amp;value,<sp/>1));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>value<sp/>&amp;<sp/>0xf8;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>value<sp/>|<sp/><ref refid="mpu6050_8h_1a3c240f7062a547fee82e419b565e440e" kindref="member">MPU6050_CLOCK_PLL_XGYRO</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1gaeb71e2a5bb188971fa26aa14da35fad7" kindref="member">I2C_DEV_CHECK</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="group__i2cdev_1gad9827abf64603201a084148c0de097ec" kindref="member">i2c_dev_write_reg</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="mpu6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/>&amp;value,<sp/>1));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>fullscale<sp/>gyro<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="mpu6050_8h_1aac5b35a3fa5792b38fe7118bc72fb442" kindref="member">MPU6050_GYRO_FS_250</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1gaeb71e2a5bb188971fa26aa14da35fad7" kindref="member">I2C_DEV_CHECK</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="group__i2cdev_1gad9827abf64603201a084148c0de097ec" kindref="member">i2c_dev_write_reg</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="mpu6050_8h_1a004871ad77398075d79e9111989007dc" kindref="member">MPU6050_RA_GYRO_CONFIG</ref>,<sp/>&amp;value,<sp/>1));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>fullscale<sp/>accel<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="mpu6050_8h_1aeb63b8456cc4d715ce1fbe29ca5b1722" kindref="member">MPU6050_ACCEL_FS_2</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1gaeb71e2a5bb188971fa26aa14da35fad7" kindref="member">I2C_DEV_CHECK</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="group__i2cdev_1gad9827abf64603201a084148c0de097ec" kindref="member">i2c_dev_write_reg</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="mpu6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/>&amp;value,<sp/>1));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Sleep<sp/>Mode<sp/>to<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1gaeb71e2a5bb188971fa26aa14da35fad7" kindref="member">I2C_DEV_CHECK</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="group__i2cdev_1gae8b4a6110cdc2d2e47b2214285ce59fc" kindref="member">i2c_dev_read_reg</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="mpu6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/>&amp;value,<sp/>1));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>value<sp/>&amp;<sp/>0x9f;<sp/></highlight><highlight class="comment">//<sp/>also<sp/>check<sp/>0xbf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1gaeb71e2a5bb188971fa26aa14da35fad7" kindref="member">I2C_DEV_CHECK</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="group__i2cdev_1gad9827abf64603201a084148c0de097ec" kindref="member">i2c_dev_write_reg</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="mpu6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/>&amp;value,<sp/>1));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>MPU6050_RA_WHO_AM_I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1ga9d3fa5a5f0df1ad3e45350da5d647a22" kindref="member">I2C_DEV_GIVE_MUTEX</ref>(&amp;mpu6050_dev_t);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>accelerometer<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">esp_err_t<sp/><ref refid="mpu6050_8c_1a37ca4429a23f8b7da14122cc381516b3" kindref="member">mpu6050_read_acce</ref>(uint8_t<sp/>*data_rd,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1ga097ee23eb474674923704d81d376e646" kindref="member">I2C_DEV_TAKE_MUTEX</ref>(&amp;mpu6050_dev_t);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1gaeb71e2a5bb188971fa26aa14da35fad7" kindref="member">I2C_DEV_CHECK</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="group__i2cdev_1gae8b4a6110cdc2d2e47b2214285ce59fc" kindref="member">i2c_dev_read_reg</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="mpu6050_8h_1a57451d4cdfc1fbf9caab9c8676ecdabc" kindref="member">ACCE_START_ADDR</ref>,<sp/>data_rd,<sp/>size));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1ga9d3fa5a5f0df1ad3e45350da5d647a22" kindref="member">I2C_DEV_GIVE_MUTEX</ref>(&amp;mpu6050_dev_t);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>gyroscope<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">esp_err_t<sp/><ref refid="mpu6050_8c_1a6a709a3acda468f8ec109f09a3148a3a" kindref="member">mpu6050_read_gyro</ref>(uint8_t<sp/>*data_rd,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1ga097ee23eb474674923704d81d376e646" kindref="member">I2C_DEV_TAKE_MUTEX</ref>(&amp;mpu6050_dev_t);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1gaeb71e2a5bb188971fa26aa14da35fad7" kindref="member">I2C_DEV_CHECK</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="group__i2cdev_1gae8b4a6110cdc2d2e47b2214285ce59fc" kindref="member">i2c_dev_read_reg</ref>(&amp;mpu6050_dev_t,<sp/><ref refid="mpu6050_8h_1a1aa49382bf0cf9dfe5333fde4fc5fbd0" kindref="member">GYRO_START_ADDR</ref>,<sp/>data_rd,<sp/>size));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__i2cdev_1ga9d3fa5a5f0df1ad3e45350da5d647a22" kindref="member">I2C_DEV_GIVE_MUTEX</ref>(&amp;mpu6050_dev_t);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Combine<sp/>the<sp/>MSB<sp/>and<sp/>LSB<sp/>values<sp/>(8-bit)<sp/>to<sp/>a<sp/>single<sp/>value<sp/>(16-bit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu6050_8c_1abb35efd200ff172bedad87a7ec590c7a" kindref="member">combine_msb_lsb_raw_data</ref>(uint8_t<sp/>*<ref refid="oled_8c_1a526c4564302c02d83a148c9184943179" kindref="member">buf_1</ref>,<sp/>int16_t<sp/>*buf_2)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_2[0]<sp/>=<sp/>((<ref refid="oled_8c_1a526c4564302c02d83a148c9184943179" kindref="member">buf_1</ref>[0]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="oled_8c_1a526c4564302c02d83a148c9184943179" kindref="member">buf_1</ref>[1]);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_2[1]<sp/>=<sp/>((<ref refid="oled_8c_1a526c4564302c02d83a148c9184943179" kindref="member">buf_1</ref>[2]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="oled_8c_1a526c4564302c02d83a148c9184943179" kindref="member">buf_1</ref>[3]);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_2[2]<sp/>=<sp/>((<ref refid="oled_8c_1a526c4564302c02d83a148c9184943179" kindref="member">buf_1</ref>[4]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="oled_8c_1a526c4564302c02d83a148c9184943179" kindref="member">buf_1</ref>[5]);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Notations<sp/>in<sp/>the<sp/>following<sp/>functions:<sp/>Index<sp/>0<sp/>-<sp/>Roll<sp/>angle;<sp/>Index<sp/>1<sp/>-<sp/>Pitch<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>accelerometer<sp/>angle<sp/>using<sp/>the<sp/>raw<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu6050_8c_1aca3594a71e8ba8621f3968ee93cc457e" kindref="member">compute_acce_angle</ref>(int16_t<sp/>ax,<sp/>int16_t<sp/>ay,<sp/>int16_t<sp/>az,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*acce_angle)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>acce_angle[0]<sp/>=<sp/>atan2(ay,<sp/>sqrt(pow(ax,<sp/>2)<sp/>+<sp/>pow(az,<sp/>2)))<sp/>*<sp/><ref refid="mpu6050_8h_1a89e47af0449640d4f15191aba5ca24c6" kindref="member">RAD_TO_DEG</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>acce_angle[1]<sp/>=<sp/>atan2(-ax,<sp/>sqrt(pow(ay,<sp/>2)<sp/>+<sp/>pow(az,<sp/>2)))<sp/>*<sp/><ref refid="mpu6050_8h_1a89e47af0449640d4f15191aba5ca24c6" kindref="member">RAD_TO_DEG</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>gyroscope<sp/>angle<sp/>using<sp/>the<sp/>raw<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu6050_8c_1a4b805f4cb3c30a323969abe87414ea90" kindref="member">compute_gyro_angle</ref>(int16_t<sp/>gx,<sp/>int16_t<sp/>gy,<sp/>int16_t<sp/>gz,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*gyro_angle)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1<sp/>/<sp/>131)<sp/>sensitivity<sp/>factor<sp/>of<sp/>Gyroscope:<sp/>1<sp/>degree<sp/>rotation<sp/>gives<sp/>a<sp/>reading<sp/>of<sp/>131<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>gx<sp/>/<sp/>131;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>gy<sp/>/<sp/>131;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>gz<sp/>=<sp/>gz<sp/>/<sp/>131;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>gyro_angle[0]<sp/>=<sp/>gx<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>gyro_angle[1]<sp/>=<sp/>gy<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>the<sp/>roll<sp/>angle<sp/>varies<sp/>widely<sp/>when<sp/>only<sp/>the<sp/>pitch<sp/>angle<sp/>changes,<sp/>activate<sp/>the<sp/>following<sp/>equations.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_angle[0]<sp/>=<sp/>dt<sp/>*<sp/>(gx<sp/>+<sp/>gy<sp/>*<sp/>sin(gyro_angle[0])<sp/>*<sp/>tan(gyro_angle[1])<sp/>+<sp/>gz<sp/>*<sp/>cos(gyro_angle[0])<sp/>*<sp/>tan(gyro_angle[1]));</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_angle[1]<sp/>=<sp/>dt<sp/>*<sp/>(gy<sp/>*<sp/>cos(gyro_angle[0])<sp/>-<sp/>gz<sp/>*<sp/>sin(gyro_angle[0]));</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">esp_err_t<sp/><ref refid="mpu6050_8c_1a7d1dcecaa06dcaa7586e8802546ab65c" kindref="member">read_mpu6050_raw</ref>(int16_t<sp/>*acce_raw_value,<sp/>int16_t<sp/>*gyro_raw_value)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>acce_rd[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref>],<sp/>gyro_rd[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref>];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mpu6050_8c_1a37ca4429a23f8b7da14122cc381516b3" kindref="member">mpu6050_read_acce</ref>(acce_rd,<sp/><ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref>)<sp/>==<sp/>ESP_OK<sp/>&amp;&amp;<sp/><ref refid="mpu6050_8c_1a6a709a3acda468f8ec109f09a3148a3a" kindref="member">mpu6050_read_gyro</ref>(gyro_rd,<sp/><ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref>)<sp/>==<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpu6050_8c_1abb35efd200ff172bedad87a7ec590c7a" kindref="member">combine_msb_lsb_raw_data</ref>(acce_rd,<sp/>acce_raw_value);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpu6050_8c_1abb35efd200ff172bedad87a7ec590c7a" kindref="member">combine_msb_lsb_raw_data</ref>(gyro_rd,<sp/>gyro_raw_value);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fuse<sp/>the<sp/>gyroscope<sp/>and<sp/>accelerometer<sp/>angle<sp/>in<sp/>a<sp/>complementary<sp/>fashion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu6050_8c_1a43b01d95c708717047b47d408a606323" kindref="member">complementary_filter</ref>(int16_t<sp/>*acce_raw_value,<sp/>int16_t<sp/>*gyro_raw_value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*complementary_angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*mpu_offset)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_initial_reading<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>timer;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acce_angle[2],<sp/>gyro_angle[2];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_initial_reading)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_initial_reading<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpu6050_8c_1aca3594a71e8ba8621f3968ee93cc457e" kindref="member">compute_acce_angle</ref>(acce_raw_value[0],<sp/>acce_raw_value[1],<sp/>acce_raw_value[2],<sp/>acce_angle);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complementary_angle[i]<sp/>=<sp/>acce_angle[i]<sp/>-<sp/>mpu_offset[i];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>(float)(esp_timer_get_time()<sp/>-<sp/>timer)<sp/>/<sp/>1000000;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>timer<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpu6050_8c_1aca3594a71e8ba8621f3968ee93cc457e" kindref="member">compute_acce_angle</ref>(acce_raw_value[0],<sp/>acce_raw_value[1],<sp/>acce_raw_value[2],<sp/>acce_angle);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpu6050_8c_1a4b805f4cb3c30a323969abe87414ea90" kindref="member">compute_gyro_angle</ref>(gyro_raw_value[0],<sp/>gyro_raw_value[1],<sp/>gyro_raw_value[2],<sp/>dt,<sp/>gyro_angle);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acce_angle[i]<sp/>=<sp/>acce_angle[i]<sp/>-<sp/>mpu_offset[i];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complementary_angle[i]<sp/>=<sp/><ref refid="mpu6050_8h_1af5abd28c44c29b7397c84f1fec4b1d84" kindref="member">ALPHA</ref><sp/>*<sp/>(complementary_angle[i]<sp/>+<sp/>gyro_angle[i])<sp/>+<sp/>(1<sp/>-<sp/><ref refid="mpu6050_8h_1af5abd28c44c29b7397c84f1fec4b1d84" kindref="member">ALPHA</ref>)<sp/>*<sp/>acce_angle[i];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">esp_err_t<sp/><ref refid="mpu6050_8c_1aad4ab5073aa1052f269ac1327fc0b584" kindref="member">avg_sensors</ref>(int16_t<sp/>*acce_raw_value_avg,<sp/>int16_t<sp/>*gyro_raw_value_avg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>*acce_offs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>*gyro_offs)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>curr_acce_raw_value[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2],<sp/>curr_gyro_raw_value[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>acce_raw_value_sum[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2]<sp/>=<sp/>{0,<sp/>0,<sp/>0},<sp/>gyro_raw_value_sum[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mpu6050_8h_1a36226d7f0921c9ef24582124baa4c3b7" kindref="member">MPU_CALIBRATION_AVG_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mpu6050_8c_1a7d1dcecaa06dcaa7586e8802546ab65c" kindref="member">read_mpu6050_raw</ref>(curr_acce_raw_value,<sp/>curr_gyro_raw_value)<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG_MPU,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>MPU<sp/>for<sp/>calibration<sp/>!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2;<sp/>j++)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acce_raw_value_sum[j]<sp/>+=<sp/>curr_acce_raw_value[j]<sp/>-<sp/>acce_offs[j];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_raw_value_sum[j]<sp/>+=<sp/>curr_gyro_raw_value[j]<sp/>-<sp/>gyro_offs[j];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2;<sp/>k++)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acce_raw_value_avg[k]<sp/>=<sp/>acce_raw_value_sum[k]<sp/>/<sp/><ref refid="mpu6050_8h_1a36226d7f0921c9ef24582124baa4c3b7" kindref="member">MPU_CALIBRATION_AVG_COUNT</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_raw_value_avg[k]<sp/>=<sp/>gyro_raw_value_sum[k]<sp/>/<sp/><ref refid="mpu6050_8h_1a36226d7f0921c9ef24582124baa4c3b7" kindref="member">MPU_CALIBRATION_AVG_COUNT</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculate<sp/>mpu_offset<sp/>for<sp/>calibration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">esp_err_t<sp/><ref refid="mpu6050_8c_1afb2330f2330e6a13a16e271648954709" kindref="member">calibrate_mpu6050</ref>()</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>acce_raw_value_avg[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2]<sp/>=<sp/>{0,<sp/>0,<sp/>0},<sp/>gyro_raw_value_avg[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>i,<sp/>offset_ready;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mpu6050_8c_1aad4ab5073aa1052f269ac1327fc0b584" kindref="member">avg_sensors</ref>(acce_raw_value_avg,<sp/>gyro_raw_value_avg,<sp/>acce_raw_value_offset,<sp/>gyro_raw_value_offset)<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>gyro_raw_value_offset[0]<sp/>=<sp/>gyro_raw_value_avg[0];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>gyro_raw_value_offset[1]<sp/>=<sp/>gyro_raw_value_avg[1];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>gyro_raw_value_offset[2]<sp/>=<sp/>gyro_raw_value_avg[2];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>acce_raw_value_offset[0]<sp/>=<sp/>acce_raw_value_avg[0];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>acce_raw_value_offset[1]<sp/>=<sp/>acce_raw_value_avg[1];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>acce_raw_value_offset[2]<sp/>=<sp/>(<ref refid="mpu6050_8c_1a22c3bf9b7c8789d18e5075f356366ad6" kindref="member">G_RAW_VALUE</ref><sp/>-<sp/>acce_raw_value_avg[2]);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>offset_ready<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mpu6050_8c_1a1e4d2dba5c2a7c93721603af24528263" kindref="member">MAX_CALIBRATION_ATTEMPTS</ref><sp/>&amp;&amp;<sp/>offset_ready<sp/>!=<sp/>6;<sp/>i++)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mpu6050_8c_1aad4ab5073aa1052f269ac1327fc0b584" kindref="member">avg_sensors</ref>(acce_raw_value_avg,<sp/>gyro_raw_value_avg,<sp/>acce_raw_value_offset,<sp/>gyro_raw_value_offset)<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(gyro_raw_value_avg[0])<sp/>&lt;=<sp/><ref refid="mpu6050_8c_1a7f8f0d32f0f2e4dd8ca1eca78b697b7f" kindref="member">MIN_GYRO_ERROR</ref>)<sp/>offset_ready++;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>gyro_raw_value_offset[0]<sp/>+=<sp/>gyro_raw_value_avg[0];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(gyro_raw_value_avg[1])<sp/>&lt;=<sp/><ref refid="mpu6050_8c_1a7f8f0d32f0f2e4dd8ca1eca78b697b7f" kindref="member">MIN_GYRO_ERROR</ref>)<sp/>offset_ready++;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>gyro_raw_value_offset[1]<sp/>+=<sp/>gyro_raw_value_avg[1];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(gyro_raw_value_avg[2])<sp/>&lt;=<sp/><ref refid="mpu6050_8c_1a7f8f0d32f0f2e4dd8ca1eca78b697b7f" kindref="member">MIN_GYRO_ERROR</ref>)<sp/>offset_ready++;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>gyro_raw_value_offset[2]<sp/>+=<sp/>gyro_raw_value_avg[2];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(acce_raw_value_avg[0])<sp/>&lt;=<sp/><ref refid="mpu6050_8c_1a715099a8b0078a88a0045d9b57c38260" kindref="member">MIN_ACCE_ERROR</ref>)<sp/>offset_ready++;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>acce_raw_value_offset[0]<sp/>+=<sp/>acce_raw_value_avg[0];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(acce_raw_value_avg[1])<sp/>&lt;=<sp/><ref refid="mpu6050_8c_1a715099a8b0078a88a0045d9b57c38260" kindref="member">MIN_ACCE_ERROR</ref>)<sp/>offset_ready++;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>acce_raw_value_offset[1]<sp/>+=<sp/>acce_raw_value_avg[1];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(<ref refid="mpu6050_8c_1a22c3bf9b7c8789d18e5075f356366ad6" kindref="member">G_RAW_VALUE</ref><sp/>-<sp/>acce_raw_value_avg[2])<sp/>&lt;=<sp/><ref refid="mpu6050_8c_1a715099a8b0078a88a0045d9b57c38260" kindref="member">MIN_ACCE_ERROR</ref>)<sp/>offset_ready++;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>acce_raw_value_offset[2]<sp/>+=<sp/>acce_raw_value_avg[2]<sp/>-<sp/><ref refid="mpu6050_8c_1a22c3bf9b7c8789d18e5075f356366ad6" kindref="member">G_RAW_VALUE</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(10<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="mpu6050_8c_1a1e4d2dba5c2a7c93721603af24528263" kindref="member">MAX_CALIBRATION_ATTEMPTS</ref>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(TAG_MPU,<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>calibration<sp/>attemps<sp/>limit<sp/>exceeded,<sp/>quiting<sp/>calibration.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(</highlight><highlight class="stringliteral">&quot;accelerometer<sp/>offset<sp/>values:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>|<sp/>%d<sp/>|<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>acce_raw_value_offset[0],<sp/>acce_raw_value_offset[1],<sp/>acce_raw_value_offset[2]);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(</highlight><highlight class="stringliteral">&quot;gyroscope<sp/>offset<sp/>values:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>|<sp/>%d<sp/>|<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>gyro_raw_value_offset[0],<sp/>gyro_raw_value_offset[1],<sp/>gyro_raw_value_offset[2]);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculate<sp/>roll<sp/>and<sp/>pitch<sp/>angles<sp/>of<sp/>the<sp/>MPU<sp/>after<sp/>applying<sp/>the<sp/>complementary<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">esp_err_t<sp/><ref refid="mpu6050_8c_1a2103bceaa1a91be4c8bdbe49cbc22c34" kindref="member">read_mpu6050</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*euler_angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*mpu_offset)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>acce_raw_value[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2],<sp/>gyro_raw_value[<ref refid="mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref><sp/>/<sp/>2];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complementary_angle[2];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mpu6050_8c_1a7d1dcecaa06dcaa7586e8802546ab65c" kindref="member">read_mpu6050_raw</ref>(acce_raw_value,<sp/>gyro_raw_value)<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG_MPU,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>MPU!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpu6050_8c_1a43b01d95c708717047b47d408a606323" kindref="member">complementary_filter</ref>(acce_raw_value,<sp/>gyro_raw_value,<sp/>complementary_angle,<sp/>mpu_offset);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(euler_angle,<sp/>complementary_angle,<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/mpu6050.c"/>
  </compounddef>
</doxygen>
