<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="oled_8h" kind="file" language="C++">
    <compoundname>oled.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">driver/gpio.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <includes refid="pin__defs_8h" local="yes">pin_defs.h</includes>
    <includes refid="lsa_8h" local="yes">lsa.h</includes>
    <includedby refid="oled_8c" local="yes">src/oled.c</includedby>
    <incdepgraph>
      <node id="11">
        <label>adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>lsa.h</label>
        <link refid="lsa_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pin_defs.h</label>
        <link refid="pin__defs_8h"/>
      </node>
      <node id="13">
        <label>driver/adc.h</label>
      </node>
      <node id="4">
        <label>driver/gpio.h</label>
      </node>
      <node id="14">
        <label>esp_adc_cal.h</label>
      </node>
      <node id="16">
        <label>esp_err.h</label>
      </node>
      <node id="5">
        <label>esp_log.h</label>
      </node>
      <node id="6">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="15">
        <label>freertos/event_groups.h</label>
      </node>
      <node id="7">
        <label>freertos/task.h</label>
      </node>
      <node id="10">
        <label>sdkconfig.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/oled.c</label>
        <link refid="oled_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="oled_8h_1ac8072345fb17096a58749862b18d0d46" prot="public" static="no">
        <name>SRA_LOGO</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="43" column="9" bodyfile="include/oled.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oled_8h_1a3b0f639b50cef0ced91fa37c01d8f5d2" prot="public" static="no">
        <name>WALLE_LOGO</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="44" column="9" bodyfile="include/oled.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oled_8h_1a6a977d61ba47e6ebf437141ddc7d06f1" prot="public" static="no">
        <name>MARIO_LOGO</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="45" column="9" bodyfile="include/oled.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oled_8h_1ad94ec58c40ec94807564e18bb5746f11" prot="public" static="no">
        <name>WALLE_TEXT</name>
        <initializer>CONFIG_WALL_E_LOGO_TEXT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="46" column="9" bodyfile="include/oled.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oled_8h_1a4f2a68c9ddc7049ae7d89ead2e1d0ff0" prot="public" static="no">
        <name>MARIO_TEXT</name>
        <initializer>CONFIG_MARIO_LOGO_TEXT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="47" column="9" bodyfile="include/oled.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="oled_8h_1ac8f5821ae55ffbab7a4947ccef5e18ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t init_oled</definition>
        <argsstring>()</argsstring>
        <name>init_oled</name>
        <briefdescription>
<para>enables and configures OLED display </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t i.e it shows if OLED is initialised successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="56" column="11" bodyfile="src/oled.c" bodystart="247" bodyend="283" declfile="include/oled.h" declline="56" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="oled_8h_1a895f3fc97245c493b7414566815f3b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t display_logo</definition>
        <argsstring>(int logo_id)</argsstring>
        <name>display_logo</name>
        <param>
          <type>int</type>
          <declname>logo_id</declname>
        </param>
        <briefdescription>
<para>displays SRA/Wall-E/Mario logo on OLED screen </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logo_id</parametername>
</parameternamelist>
<parameterdescription>
<para>macro</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t i.e it shows if logo is displayed successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="65" column="11" bodyfile="src/oled.c" bodystart="285" bodyend="333" declfile="include/oled.h" declline="65" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="oled_8h_1a98433da15e8207817e3ffd4e42b626a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t display_lsa</definition>
        <argsstring>(line_sensor_array readings)</argsstring>
        <name>display_lsa</name>
        <param>
          <type><ref refid="unionline__sensor__array" kindref="compound">line_sensor_array</ref></type>
          <declname>readings</declname>
        </param>
        <briefdescription>
<para>displays LSA bar on OLED screen </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>readings</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="unionline__sensor__array" kindref="compound">line_sensor_array</ref> struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t i.e it shows if LSA bar is displayed successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="74" column="11" bodyfile="src/oled.c" bodystart="335" bodyend="390" declfile="include/oled.h" declline="74" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="oled_8h_1a1258c05bcda38123f6b825ae1abfcd54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t display_mpu</definition>
        <argsstring>(float pitch, float roll)</argsstring>
        <name>display_mpu</name>
        <param>
          <type>float</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>float</type>
          <declname>roll</declname>
        </param>
        <briefdescription>
<para>displays pitch and roll readings on OLED screen </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pitch</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of pitch in float </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>roll</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of Roll in float</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t i.e it shows if Pitch and Roll values are displayed successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="84" column="11" bodyfile="src/oled.c" bodystart="392" bodyend="433" declfile="include/oled.h" declline="84" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="oled_8h_1ac588665be0f2f8fb00787ef97a32e03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t display_pid_values</definition>
        <argsstring>(float kp, float ki, float kd)</argsstring>
        <name>display_pid_values</name>
        <param>
          <type>float</type>
          <declname>kp</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ki</declname>
        </param>
        <param>
          <type>float</type>
          <declname>kd</declname>
        </param>
        <briefdescription>
<para>displays kp, ki and kd reading on the OLED screen </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kp</parametername>
</parameternamelist>
<parameterdescription>
<para>value of kp in float </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ki</parametername>
</parameternamelist>
<parameterdescription>
<para>value of ki in float </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kd</parametername>
</parameternamelist>
<parameterdescription>
<para>value of kd in float</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t i.e it shows if Pitch and Roll values are displayed successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="95" column="11" bodyfile="src/oled.c" bodystart="435" bodyend="472" declfile="include/oled.h" declline="95" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="oled_8h_1a479e088b824336912654e8c146885e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t display_servo_values</definition>
        <argsstring>(int s1, int s2, int s3, int s4)</argsstring>
        <name>display_servo_values</name>
        <param>
          <type>int</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s4</declname>
        </param>
        <briefdescription>
<para>displays Servo angles on the OLED screen </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>value of Servo_A in float </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s2</parametername>
</parameternamelist>
<parameterdescription>
<para>value of Servo_B in float </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s3</parametername>
</parameternamelist>
<parameterdescription>
<para>value of Servo_C in float </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s4</parametername>
</parameternamelist>
<parameterdescription>
<para>value of Servo_D in float</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t i.e it shows if Pitch and Roll values are displayed successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oled.h" line="107" column="11" bodyfile="src/oled.c" bodystart="474" bodyend="514" declfile="include/oled.h" declline="107" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/><sp/>2021<sp/>Society<sp/>of<sp/>Robotics<sp/>and<sp/>Automation</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OLED_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OLED_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;driver/gpio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pin__defs_8h" kindref="compound">pin_defs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lsa_8h" kindref="compound">lsa.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_ENABLE_OLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lvgl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lvgl__helpers_8h" kindref="compound">lvgl_helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="oled_8h_1ac8072345fb17096a58749862b18d0d46" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SRA_LOGO<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="oled_8h_1a3b0f639b50cef0ced91fa37c01d8f5d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WALLE_LOGO<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="oled_8h_1a6a977d61ba47e6ebf437141ddc7d06f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MARIO_LOGO<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="oled_8h_1ad94ec58c40ec94807564e18bb5746f11" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WALLE_TEXT<sp/>CONFIG_WALL_E_LOGO_TEXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="oled_8h_1a4f2a68c9ddc7049ae7d89ead2e1d0ff0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MARIO_TEXT<sp/>CONFIG_MARIO_LOGO_TEXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">esp_err_t<sp/><ref refid="oled_8h_1ac8f5821ae55ffbab7a4947ccef5e18ad" kindref="member">init_oled</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">esp_err_t<sp/><ref refid="oled_8h_1a895f3fc97245c493b7414566815f3b48" kindref="member">display_logo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>logo_id);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">esp_err_t<sp/><ref refid="oled_8h_1a98433da15e8207817e3ffd4e42b626a0" kindref="member">display_lsa</ref>(<ref refid="unionline__sensor__array" kindref="compound">line_sensor_array</ref><sp/>readings);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">esp_err_t<sp/><ref refid="oled_8h_1a1258c05bcda38123f6b825ae1abfcd54" kindref="member">display_mpu</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitch,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>roll);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">esp_err_t<sp/><ref refid="oled_8h_1ac588665be0f2f8fb00787ef97a32e03d" kindref="member">display_pid_values</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ki,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kd);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">esp_err_t<sp/><ref refid="oled_8h_1a479e088b824336912654e8c146885e1e" kindref="member">display_servo_values</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s4);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/oled.h"/>
  </compounddef>
</doxygen>
