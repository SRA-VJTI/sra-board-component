AutoGen Definitions dummy;
struct = {
  cp-id     = 'structline__sensor__array_1_1line__sensor';
  cp-name   = 'line_sensor_array::line_sensor';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structline__sensor__array_1_1line__sensor_1a7f5fc9359791ab279957af886e69ca5a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'A0';
      sec-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      sec-mem-desc-line = '14';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structline__sensor__array_1_1line__sensor_1a28e6d4af41b90d53d6b34c139c5abe25';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'A1';
      sec-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      sec-mem-desc-line = '15';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structline__sensor__array_1_1line__sensor_1a0cb2e4a77c046952a58441f9db10438c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'A2';
      sec-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      sec-mem-desc-line = '16';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structline__sensor__array_1_1line__sensor_1a78bbdd03189079ec65a1148bac0597f7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'A3';
      sec-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      sec-mem-desc-line = '17';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
  cp-fileline  = '13';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'unionline__sensor__array';
  cp-name   = 'line_sensor_array';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionline__sensor__array_1a21a53a7659df2db5b988bfe19f4069d5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct line_sensor_array::line_sensor
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lsa';
      sec-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      sec-mem-desc-line = '18';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionline__sensor__array_1ab46ab63e7396f219bfd4748e91fef673';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'adc_reading';
      sec-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      sec-mem-desc-line = '20';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
  cp-fileline  = '11';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'line_sensor_array';
        node-link = {
          node-link-id = 'unionline__sensor__array';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
lsa
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'line_sensor_array::line_sensor';
        node-link = {
          node-link-id = 'structline__sensor__array_1_1line__sensor';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* union */
file = {
  file-id   = 'adc_8h';
  file-name = 'adc.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'adc_8h_1a63baed8df076ce9dddaea1ae8694c1d8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DEFAULT_VREF';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1100
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/adc.h';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'adc_8h_1a0eb8c90dffee280b1a79d8fb16968a74';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'config_adc1';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/adc.h';
      func-mem-desc-line = '25';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Configure width and attenuation of ADC 1.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t - returns ESP_OK if 11dB attenuation and 12 bit width configured to ADC 1, else it returns ESP_ERR_INVALID_ARG.  
<br>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'adc_8h_1a97ba6a060bde9d47d6783e6c8c73e6fc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'characterize_adc1';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/adc.h';
      func-mem-desc-line = '32';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Characterize ADC 1 using either Vref or Two Point.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'adc_8h_1ab564ea72fa47c36b9d06977ea586cb1a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_adc1';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/adc.h';
      func-mem-desc-line = '39';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
call function config_adc1() and characterize_adc1().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t - returns ESP_OK if Configuration and Characterization of adc1 is successful, else it returns ESP_ERR_INVALID_ARG.  
<br>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'adc_8h_1a5056ff0fa4f211e8cbbf6e706228d864';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_adc';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'adc_pin';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/adc.h';
      func-mem-desc-line = '48';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read raw adc value of given adc pin.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param adc_pin One of the GPIO pin to which LSA is connected (36/39/35/34)

@return esp_err_t -returns raw reading of adc pin if lsa pin is passed to function, else it returns ESP_ERR_INVALID_ARG.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/adc.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bar__graph_8h';
  file-name = 'bar_graph.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bar__graph_8h_1ab10cdc6b54d4e647335eebb25dabd2f7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_bar_graph';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/bar_graph.h';
      func-mem-desc-line = '35';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
enables the bar graph led's gpio pins
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
It will check for state of motor driver A and B, and accordingly init the free gpios.

<hr>
<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Motor Driver A</th>    <th class="markdownTableHeadNone"> Motor Driver B</th>    <th class="markdownTableHeadNone"> Mode</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> 1</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> 2</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> 3</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> 4</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> 5</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> 6</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> 7</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> 8</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> 0</td>  </tr>
</table>

enabled_bar_graph_flag is set to the value of Mode accordingly.

@return esp_err_t returns ESP_OK if enabled correctly, and ESP_FAIL if it failed to initialise
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bar__graph_8h_1ae3c6552600f6d84335edd8bb6095fe3a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'set_bar_graph';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/bar_graph.h';
      func-mem-desc-line = '74';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the value of bar graph LED.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
The exact working of this is a bit hard to understand, so this is example. Below are the given states of motor drivers

Motor Driver A: Normal
Motor Driver B: Off
Mode = 7, so for mode = 7,
mask = bitmask[7] = 0x0F = 00001111
data = 0xAA = 10101010

Since, motor driver A is in normal mode and motor driver B is off, we can only use IN5 - IN8 pins of the bar graph LED

@code 
LED1 <-----> Motor Driver A (IN1) ----- 0    
LED2 <-----> Motor Driver A (IN2) ----- 0    
LED3 <-----> Motor Driver A (IN3) ----- 0    
LED4 <-----> Motor Driver A (IN4) ----- 0    
LED5 <--X--> Motor Driver B (IN5) ----- 1    
LED6 <--X--> Motor Driver B (IN6) ----- 1    
LED7 <--X--> Motor Driver B (IN7) ----- 1    
LED8 <--X--> Motor Driver B (IN8) ----- 1    
@endcode


Mask ==> 00001111 => 0x0F

Now, if data is 10101010, then even though pins IN1-IN4 are being used by motor driver, it will be set by gpio_set_level, which will
crash the esp32 device. So, we check in the bitmask if the following pin is free or not, if bit is 1, it can be used, if it is 0, then
it can't be used.

So, to achieve this we bitwise-and the mask with 0x80(10000000), if result is 0x80, then leftmost bit is 1, else it is 0.
If leftmost bit is 1, means we can use this pin of bar graph, then we do the same thing with data, bitwise-and it with 0x80,
to find the leftmost bit, if it is 1, the pin is set to 1, else 0. Now we left shift the data and mask variable.

@param data 8bit binary in hexadecimal form, i.e, the pattern that is needed to be shown on the bar graph LED
@return esp_err_t returns ESP_OK
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bar__graph_8h_1aedf9bcb0b39fed044eb70e63fc74c496';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'bool_to_uint8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_array';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/bar_graph.h';
      func-mem-desc-line = '82';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
converts a boolean array of size 8 into 8-bit unsigned integer
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param input_array boolean input array of size 8
@return uint8_t returns a 8 bit number formed after combining the boolean array
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/bar_graph.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'lsa_8h';
  file-name = 'lsa.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'lsa_8h_1a3992a43fac1d452edf605ff497a25030';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NUMBER_OF_SAMPLES';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_NUMBER_OF_SAMPLES
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      define-mem-desc-line = '8';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'lsa_8h_1abcc31f8fc8c2fa816012d1fcf059a19c';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
union line_sensor_array
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'line_sensor_array';
      typedef-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      typedef-mem-desc-line = '21';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'lsa_8h_1ae100292bb09dfe139df0cafc36ef19fd';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_line_sensor';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      func-mem-desc-line = '30';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
enables and configures adc
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param none

@return esp_err_t i.e it shows if adc is initialised successfully or not
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'lsa_8h_1a3db021dc5dafaf9643129580e2b17ea2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
line_sensor_array
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_line_sensor';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
      func-mem-desc-line = '40';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get multisampled line sensor array readings.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param none

@return Returns a pointer to a struct that contains multisampled adc readings 
        for all the pins specified in lsa_pins array
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/lsa.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'motor__driver_8h';
  file-name = 'motor_driver.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1a3392e32a84aa6c7c3311e0ba6ce01259';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PARALLEL_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1aa045b6864425ecb90f2c253e8440d21c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NORMAL_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1aecfc8cb31c77ff43036a88e475f0198d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MOTOR_FORWARD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
200
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1ae29c16906c059ef2615d54a3ee144763';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MOTOR_BACKWARD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
201
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1aa61a6c32d7187d20f8ea4171b8bf8dd7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MOTOR_STOP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
202
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1a60a0d0982603cefa4efa58450dd39104';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MOTOR_A_0';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
100
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1ab115b64cb678fa39054d32dd04a0fbea';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MOTOR_A_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
101
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '22';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1aefb7d31b18eda2fefe6719d839bd69f9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MOTOR_B_0';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
102
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1aa99d57f658aa2b0cfc53c0cc75fce719';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MOTOR_B_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
103
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1a95eb372d31d30f5034c1bd310b229b85';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'enable_motor_driver';
      define-mem-param  = {
        define-mem-def-name = 'id';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'mode';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
enable_motor_driver_##id(mode)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables Motor driver in Parallel or Normal Mode.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param id for id=a, enables motor driver a and for id=b, enables motor driver b
@param mode if mode = 1 is passed, motor driver is operated in parallel mode, if mode = 2 is passed, motor driver is operated in normal mode
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'motor__driver_8h_1ab86dcd9449875dab4e7f006bfd4b47fa';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'read_motor_driver_mode';
      define-mem-param  = {
        define-mem-def-name = 'id';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
read_motor_driver_mode_##id()
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reads mode of motor driver.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param id for id=a, returns mode of motor driver a, for id=b, returns mode of motor driver b
@return int returns mode of motor driver B, 1 = Parallel mode, 2 = Normal mode
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8h_1a9fc3907d0ee8196eca819e1e5e1c6977';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_motor_driver_a';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      func-mem-desc-line = '48';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables Motor driver A in Parallel or Normal Mode.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param mode if mode = 1 is passed, motor driver is operated in parallel mode, if mode = 2 is passed, motor driver is operated in normal mode
@return esp_err_t returns ESP_OK if motor driver initialised properly, else it returns ESP_ERR_INVALID_ARG 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8h_1a11c7858cdd467a4bbcff436e43a585e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_motor_driver_b';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      func-mem-desc-line = '56';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables Motor driver B in Parallel or Normal Mode.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param mode if mode = 1 is passed, motor driver is operated in parallel mode, if mode = 2 is passed, motor driver is operated in normal mode
@return esp_err_t returns ESP_OK if motor driver initialised properly, else it returns ESP_ERR_INVALID_ARG 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8h_1a027943094f99f52b1ea067ab85384686';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'set_motor_speed';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'motor_id';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'direction';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'duty_cycle';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      func-mem-desc-line = '66';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the speed of motors.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param motor_id set it as MOTOR_A_0, MOTOR_A_1, MOTOR_B_0, MOTOR_B_1 to select the appropriate motor to set its speed and direction
@param direction set is as MOTOR_FORWARD for forward motion, MOTOR_BACKWARD for backward motion, MOTOR_STOP to stop the motor
@param duty_cycle set the duty cycle of the motor driver PWM
@return esp_err_t returns ESP_OK if speed correctly, ESP_FAIL if any error occurs
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8h_1ae7ed1b0e385fe871d79ac02fc5177768';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_motor_driver_mode_a';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      func-mem-desc-line = '73';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reads mode of motor driver A.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return int returns mode of motor driver A, 1 = Parallel mode, 2 = Normal mode
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8h_1a61b75cb1eb76f0a02144746799c6b3e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_motor_driver_mode_b';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
      func-mem-desc-line = '80';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reads mode of motor driver B.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return int returns mode of motor driver B, 1 = Parallel mode, 2 = Normal mode
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/motor_driver.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mpu6050_8h';
  file-name = 'mpu6050.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a033b5e8a30541fe4ff939a62fdb7a43d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'I2C_MASTER_SCL_IO';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
MPU6050_SCL
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
gpio number for I2C master clock 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1af47631d568bba17edf9d1ea042602bb6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'I2C_MASTER_SDA_IO';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
MPU6050_SDA
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '22';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
gpio number for I2C master data  
<br>
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1aab9e642b6200f95fcbd2ad7466aaa2d3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'I2C_MASTER_NUM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
I2C_NUM_1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C port number for master dev 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1aaa0e84f340ef5ea9db2d7624fdadaa26';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'I2C_MASTER_TX_BUF_DISABLE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C master do not need buffer 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a37a0707200e50e3b3e9ab28b1b8d6777';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'I2C_MASTER_RX_BUF_DISABLE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '25';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C master do not need buffer 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a5c22ca4de37a83a59014e48b0a0b043d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'I2C_MASTER_FREQ_HZ';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
100000
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '26';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C master clock frequency 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1ad4d6255d8f7e5dc770e773b787977508';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MPU6050_ADDR';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x68
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '28';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
slave address for mpu6050 sensor 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a2eb5149764936d5cdb6f4eda6b13c39b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ACCE_START_ADD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3B
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
accelerometer start address 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a4ffea4a04253edb1260157e9b711b42a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GYRO_START_ADD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x43
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
gyroscope start address 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a7fc57d5be9f588839a00c75ef2946e17';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WRITE_BIT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
I2C_MASTER_WRITE
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C master write 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a2f493ed233e66342493f155ebda5c183';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'READ_BIT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
I2C_MASTER_READ
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '33';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C master read 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a7dd22b838d2b1f22d367e6cdef04ccc3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ACK_CHECK_EN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '34';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C master will check ack from slave
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a8ad7ceb373ce664b1c2482a66537e7c0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ACK_CHECK_DIS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C master will not check ack from slave 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a1d64a546dacc15052a6c4887f9d0020f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ACK_VAL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C ack value 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1ae20bf16f65c41237e2d620ef49890781';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NACK_VAL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I2C nack value 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1af5abd28c44c29b7397c84f1fec4b1d84';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ALPHA';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0.9834
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a89e47af0449640d4f15191aba5ca24c6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RAD_TO_DEG';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
57.2957795
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mpu6050_8h_1a6c7cd32e1bac137f05e4a752b4ad10af';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BUFF_SIZE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
6
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1aff189f3f860a58ec5ad054d15d8db470';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'i2c_master_init';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '48';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initialise the ESP32 I2C Driver in Master Mode.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t returns ESP_OK if I2C driver initialised properly, ESP_ERR_INVALID_ARG for Parameter error, ESP_FAIL Driver for install error 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1a044ec3e6d6e04c8c1624a2f89ac4d7ec';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_mpu6050';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '57';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initialise MPU-6050 (by sending the appropriate queued commands); 
Refer this for more information: https://invensense.tdk.com/wp-content/uploads/2015/02/MPU-6000-Datasheet1.pdf.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t returns ESP_OK if MPU-6050 initialised successfully, else the appropriate error code
Refer this for more info on ESP32 I2C Error codes: https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/i2c.html
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1a37ca4429a23f8b7da14122cc381516b3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mpu6050_read_acce';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data_rd';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '66';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the accelerometer raw values (Ax, Ay, Az) into an 8-bit array
Note that these raw values are actually 16-bit, split into MSB (Byte) and LSB (Byte), sent one after the other.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param data_rd Buffer array for storing raw values
@param size Size of the buffer array (6 in our case)
@return esp_err_t returns ESP_OK if acceleromter read successfully, else the appropriate error code 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1a6a709a3acda468f8ec109f09a3148a3a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mpu6050_read_gyro';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data_rd';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '75';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the gyroscope raw values (Gx, Gy, Gz) into an 8-bit array
Note that these raw values are actually 16-bit, split into MSB (Byte) and LSB (Byte), sent one after the other.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param data_rd Buffer array for storing raw values
@param size Size of the buffer array (6 in our case)
@return esp_err_t returns ESP_OK if gyroscope read successfully, else the appropriate error code
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1abb35efd200ff172bedad87a7ec590c7a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'combine_msb_lsb_raw_data';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf_1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf_2';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '84';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Combine two 8-bit values to a 16-bit one
Note that EVEN indices in the input buffer represent the MSB (Byte)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param buf_1 8-bit Input array of size 6
@param buf_2 16-bit Output array of size 3
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1aca3594a71e8ba8621f3968ee93cc457e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'compute_acce_angle';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ax';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ay';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'az';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acce_angle';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '95';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Compute the Euler angle (Pitch and Roll) from the accelerometer raw values
Axes and Angles - X: Roll, Y: Pitch, Z: Yaw.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param ax Raw accelerometer value (X-axis)
@param ay Raw accelerometer value (Y-axis)
@param az Raw accelerometer value (Z-axis)
@param acce_angle Resultant angle array 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1a4b805f4cb3c30a323969abe87414ea90';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'compute_gyro_angle';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gy';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gz';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gyro_angle';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '107';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Compute the Euler angle (Pitch and Roll) from the gyroscope raw values
Axes and Angles - X: Roll, Y: Pitch, Z: Yaw
More on this here: https://philsal.co.uk/projects/imu-attitude-estimation.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param gx Raw gyroscope value (X-axis)
@param gy Raw gyroscope value (Y-axis)
@param gz Raw gyroscope value (Z-axis)
@param dt Sampling time for gyroscope readings (interval between 2 readings)
@param gyro_angle Resultant angle array
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1a7d1dcecaa06dcaa7586e8802546ab65c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_mpu6050_raw';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acce_raw_value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gyro_raw_value';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '117';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A wrapper for reading the 8-bit raw values from MPU and then combining them to their final form 
i.e. 16-bit.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param acce_raw_value 16-bit array for storing the accelerometer raw values
@param gyro_raw_value 16-bit array for storing the gyroscope raw values
@return esp_err_t returns ESP_OK if successful, else the appropriate error code
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1a43b01d95c708717047b47d408a606323';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'complementary_filter';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acce_raw_value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gyro_raw_value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'complementary_angle';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mpu_offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '127';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fuse the gyroscope and accelerometer angle in a complementary fashion
More on this here: https://robotics.stackexchange.com/questions/10746/complimentary-filter-issues.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param acce_raw_value Raw values from the accelerometer
@param gyro_raw_value Raw values from the gyroscope
@param complementary_angle Resultant fused and filtered angle
@param mpu_offset Offset of the MPU (accelerometer) at rest position
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8h_1a2103bceaa1a91be4c8bdbe49cbc22c34';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_mpu6050';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'euler_angle';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mpu_offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
      func-mem-desc-line = '136';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The ultimate function (application ready); takes in the input raw values and initial conditions and gives out the complementary pitch and roll angles.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param euler_angle Input array of angles to store the results in (passed by reference)
@param mpu_offset Initial conditions for the accelerometer and gyroscope (Angle at rest position)
@return esp_err_t returns ESP_OK if successful, else the appropriate error code
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/mpu6050.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'pin__defs_8h';
  file-name = 'pin_defs.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a763ffd798508592c5092ac77daa5a659';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHECK';
      define-mem-param  = {
        define-mem-def-name = 'x';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
    do                          \
    {                           \
        esp_err_t __;           \
        if ((__ = x) != ESP_OK) \
            return __;          \
    } while (0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '4';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a2e97372e6d071fc2e88dbb48de906318';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHECK_LOGE';
      define-mem-param  = {
        define-mem-def-name = 'err';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'x';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'tag';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'msg';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = '...';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
    do                                         \
    {                                          \
        if ((err = x) != ESP_OK)               \
        {                                      \
            ESP_LOGE(tag, msg, ##__VA_ARGS__); \
            return err;                        \
        }                                      \
    } while (0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1ae4b5c81e3a4d9fe739bc10a3e3802207';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MPU6050_INT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
23
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '22';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a439afff9b79599edab1529f62443ea5f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MPU6050_SDA';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
22
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1ae4a616964509f7581d0d423bea83d657';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MPU6050_SCL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
21
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a59d54556a3e0d1c8355a5081e7dea062';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BG_LED_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a5f14e6a05c430e90512ca80bee65c488';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BG_LED_2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
33
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1ad251a2ea22a0ea638f24f939b5b72ae2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BG_LED_3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
25
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '31';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a3e8246c47bfdfb111fb3d9d1fd1226a0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BG_LED_4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
26
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a32539f8b7e2f747a3c8d9b21d7bfe085';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BG_LED_5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
27
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '33';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a0f04e876e1cd7dd1238a44c8a82bfe94';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BG_LED_6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
14
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '34';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a27bb705f7644d10c17186baeac2ae1a3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BG_LED_7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
12
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1abb2349aa558034464942254c952b8a30';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BG_LED_8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
13
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1afc718c1fcfcf5d762545260289674333';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SWITCH_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a62b9d54211060aac86c0ca9b02f7331e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SWITCH_2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a760f4fa2340ec8b807fea30119915efa';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SWITCH_3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
17
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '42';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a083e2bd040ccdbc6514e13b876ff20f7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SWITCH_4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1aec5ffd0b7acdb6c0f106f49665ab85de';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LSA_A0';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
36
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '47';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1abab7bd3ef2f641b3bb09e5c743875baf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LSA_A1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
39
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '48';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a53c1a1cb500354d517852152e8efa4d4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LSA_A2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
34
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '49';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a92c4b60df97bd16a34274f666b3f1d31';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LSA_A3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
35
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '50';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1ac593ad1d39cd26582a43e2bad09e1f16';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDA_NORMAL_IN_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '55';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a8db1e560298f9cf45bf9359865670faa';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDA_NORMAL_IN_2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
33
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '56';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a633480893ea2707e25a429eea0bbe34a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDA_NORMAL_IN_3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
25
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '57';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a840ffe2f76fb68cf25a61bee430c8477';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDA_NORMAL_IN_4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
26
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '58';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a074f338976294deee773f86c149766af';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDB_NORMAL_IN_5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
27
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '59';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a5186251144aeb6708634d2e53eb37fa6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDB_NORMAL_IN_6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
14
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '60';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a45d361c8ed90ddb9c56d418eda0ad7a7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDB_NORMAL_IN_7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
12
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '61';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1ae5c32c4e625ae38744483f26fbb809ad';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDB_NORMAL_IN_8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
13
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '62';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a201c4b4373616691292af16f3e6e4a58';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDA_PARALLEL_IN_1_2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
25
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '65';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a00a8a7e71c9180276dd2e96c9150d8d7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDA_PARALLEL_IN_3_4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
26
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '66';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1aa7eeb54d670ea6ca908825e393b75d33';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDB_PARALLEL_IN_5_7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
12
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '67';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a311349d98da80e0ea71b910031fd0f60';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MDB_PARALLEL_IN_6_8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
13
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '68';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1ad02b2d3f0a65ea90c450ced08da9a4d9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_A';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
5
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '72';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a30b46add9f5cd7b5abf873dc9f1009e8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_B';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
18
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '73';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pin__defs_8h_1a20be66e38dbb25b3000081eecb9b4cb3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_C';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
19
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
      define-mem-desc-line = '74';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/pin_defs.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'servo_8h';
  file-name = 'servo.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1a6376a54e0fe15082b196f563b9a98091';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_A_MIN_PULSEWIDTH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_A_MIN_PULSEWIDTH
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1abb7a7b9bbb4de8afc75eb2bd72b8465a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_A_MAX_PULSEWIDTH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_A_MAX_PULSEWIDTH
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '16';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1a845ca14dbdd498c04c84aeb9434b70fc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_A_MAX_DEGREE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_A_MAX_DEGREE
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1a025ef086774f035f0849f38e524c7594';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_B_MIN_PULSEWIDTH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_B_MIN_PULSEWIDTH
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1acc261afdcf7e85f571ed5d0b8f02936f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_B_MAX_PULSEWIDTH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_B_MAX_PULSEWIDTH
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '20';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1a697bd747318e73efc970ba631c997cd0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_B_MAX_DEGREE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_B_MAX_DEGREE
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1af48899034203fbf9878d439c6286a7e2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_C_MIN_PULSEWIDTH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_C_MIN_PULSEWIDTH
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1a9bd897b2d6eb3f01fcda8c8230b02107';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_C_MAX_PULSEWIDTH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_C_MAX_PULSEWIDTH
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8h_1ae6f9c9f2ad3e851ba3f98e8c944a7484';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SERVO_C_MAX_DEGREE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
CONFIG_SERVO_C_MAX_DEGREE
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      define-mem-desc-line = '25';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'servo_8h_1af4079acff4a8c5a298d79d841fe96b80';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_servo';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      func-mem-desc-line = '32';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables Servo port on the sra board, sets up PWM for the three pins in servo port.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t - returns ESP_OK if servo pins initialised, else it returns ESP_ERR_INVALID_ARG 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'servo_8h_1a424f7770de8a5b81a1a1b8361ac4bf0f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'set_angle_servo';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'servo_id';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'degree_of_rotation';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the angle of the servos attached to the servo port of SRA Board.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param servo_id pin number of the servo whose angle needs to be set
@param degree_of_rotation angle to which the servo must be set, depends on value of MAX_DEGREE macro
@return esp_err_t 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/servo.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sra__board_8h';
  file-name = 'sra_board.h';
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/sra_board.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'switches_8h';
  file-name = 'switches.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'switches_8h_1a70de1897315528e8b85d34aa23341f39';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_switches';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/switches.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables tactile switches on the sra board, sets up required gpio's in input pull-up mode.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t - returns ESP_OK if gpio's initialised, else it returns ESP_ERR_INVALID_ARG 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'switches_8h_1aa394f2692a1f424f79d5c3dcfa0d7bc6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_switch';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'switch_id';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/switches.h';
      func-mem-desc-line = '25';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reads the state of one of the four switches on sra board.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param switch_id id of the switch which needs to be read, we can pass the following macros: SWITCH_1, SWITCH_2, SWITCH_3, SWITCH_4. 
@return int - returns state of the switch, 1 if it is pressed and 0 if it is not pressed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/switches.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'utils_8h';
  file-name = 'utils.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'utils_8h_1a22fd7311bf5f09376f4c561febd38899';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'bound';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/utils.h';
      func-mem-desc-line = '11';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Bound a value in a range [min, max].
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param val  value to be bound
@param min  min value which the variable can take
@param max  max value which the variable can take
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'utils_8h_1a5dd929afde45581ef0588e30db9650f8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'map';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_lower_limit';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_higher_limit';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_lower_limit';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_higher_limit';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/include/utils.h';
      func-mem-desc-line = '22';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Maps a value in range [input_lower_limit, input_higher_limit] to [output_lower_limit, output_higher_limit].
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param val          value to be mapped
@param input_lower_limit    min value of val 
@param input_higher_limit   max value of val
@param output_lower_limit   input_lower_limit is mapped to output_lower_limit
@param output_higher_limit  input_higher_limit is mapped to output_higher_limit
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/include/utils.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_r_e_a_d_m_e_8md';
  file-name = 'README.md';
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/README.md';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'adc_8c';
  file-name = 'adc.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'adc_8c_1a0eb8c90dffee280b1a79d8fb16968a74';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'config_adc1';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/adc.c';
      func-mem-desc-line = '5';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Configure width and attenuation of ADC 1.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t - returns ESP_OK if 11dB attenuation and 12 bit width configured to ADC 1, else it returns ESP_ERR_INVALID_ARG.  
<br>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'adc_8c_1a97ba6a060bde9d47d6783e6c8c73e6fc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'characterize_adc1';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/adc.c';
      func-mem-desc-line = '21';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Characterize ADC 1 using either Vref or Two Point.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'adc_8c_1ab564ea72fa47c36b9d06977ea586cb1a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_adc1';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/adc.c';
      func-mem-desc-line = '43';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
call function config_adc1() and characterize_adc1().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t - returns ESP_OK if Configuration and Characterization of adc1 is successful, else it returns ESP_ERR_INVALID_ARG.  
<br>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'adc_8c_1a5056ff0fa4f211e8cbbf6e706228d864';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_adc';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'adc_pin';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/adc.c';
      func-mem-desc-line = '53';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read raw adc value of given adc pin.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param adc_pin One of the GPIO pin to which LSA is connected (36/39/35/34)

@return esp_err_t -returns raw reading of adc pin if lsa pin is passed to function, else it returns ESP_ERR_INVALID_ARG.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'adc_8c_1a769573371a4f88011e5c68c6c78aa371';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const char *
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'TAG_ADC';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "adc"
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/adc.c';
      var-mem-desc-line = '3';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/src/adc.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bar__graph_8c';
  file-name = 'bar_graph.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bar__graph_8c_1ab10cdc6b54d4e647335eebb25dabd2f7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_bar_graph';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/bar_graph.c';
      func-mem-desc-line = '16';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
enables the bar graph led's gpio pins
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
It will check for state of motor driver A and B, and accordingly init the free gpios.

<hr>
<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Motor Driver A</th>    <th class="markdownTableHeadNone"> Motor Driver B</th>    <th class="markdownTableHeadNone"> Mode</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> 1</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> 2</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> 3</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> 4</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> 5</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> 6</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> off</td>    <td class="markdownTableBodyNone"> 7</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> parallel</td>    <td class="markdownTableBodyNone"> 8</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> normal</td>    <td class="markdownTableBodyNone"> 0</td>  </tr>
</table>

enabled_bar_graph_flag is set to the value of Mode accordingly.

@return esp_err_t returns ESP_OK if enabled correctly, and ESP_FAIL if it failed to initialise
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bar__graph_8c_1ae3c6552600f6d84335edd8bb6095fe3a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'set_bar_graph';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/bar_graph.c';
      func-mem-desc-line = '103';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the value of bar graph LED.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
The exact working of this is a bit hard to understand, so this is example. Below are the given states of motor drivers

Motor Driver A: Normal
Motor Driver B: Off
Mode = 7, so for mode = 7,
mask = bitmask[7] = 0x0F = 00001111
data = 0xAA = 10101010

Since, motor driver A is in normal mode and motor driver B is off, we can only use IN5 - IN8 pins of the bar graph LED

@code 
LED1 <-----> Motor Driver A (IN1) ----- 0    
LED2 <-----> Motor Driver A (IN2) ----- 0    
LED3 <-----> Motor Driver A (IN3) ----- 0    
LED4 <-----> Motor Driver A (IN4) ----- 0    
LED5 <--X--> Motor Driver B (IN5) ----- 1    
LED6 <--X--> Motor Driver B (IN6) ----- 1    
LED7 <--X--> Motor Driver B (IN7) ----- 1    
LED8 <--X--> Motor Driver B (IN8) ----- 1    
@endcode


Mask ==> 00001111 => 0x0F

Now, if data is 10101010, then even though pins IN1-IN4 are being used by motor driver, it will be set by gpio_set_level, which will
crash the esp32 device. So, we check in the bitmask if the following pin is free or not, if bit is 1, it can be used, if it is 0, then
it can't be used.

So, to achieve this we bitwise-and the mask with 0x80(10000000), if result is 0x80, then leftmost bit is 1, else it is 0.
If leftmost bit is 1, means we can use this pin of bar graph, then we do the same thing with data, bitwise-and it with 0x80,
to find the leftmost bit, if it is 1, the pin is set to 1, else 0. Now we left shift the data and mask variable.

@param data 8bit binary in hexadecimal form, i.e, the pattern that is needed to be shown on the bar graph LED
@return esp_err_t returns ESP_OK
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bar__graph_8c_1aedf9bcb0b39fed044eb70e63fc74c496';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'bool_to_uint8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_array';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/bar_graph.c';
      func-mem-desc-line = '138';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
converts a boolean array of size 8 into 8-bit unsigned integer
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param input_array boolean input array of size 8
@return uint8_t returns a 8 bit number formed after combining the boolean array
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'bar__graph_8c_1a20e93b67ced1c6f3e3799b413b75daff';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const char *
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'TAG_BAR_GRAPH';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "bar_graph"
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/bar_graph.c';
      var-mem-desc-line = '3';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'bar__graph_8c_1a425348a406dd9fcdf5baed9fad5c4edc';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'enabled_bar_graph_flag';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/bar_graph.c';
      var-mem-desc-line = '4';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'bar__graph_8c_1addb2cb3522d4b0bb9f4e6dcbef9ff958';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'bitmask';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {0x00, 0xFF, 0xFC, 0xF0, 0xCF, 0xCC, 0xC0, 0x0F, 0x0C}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/bar_graph.c';
      var-mem-desc-line = '10';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'bar__graph_8c_1a9941740159d6edc34ca8c4c17d3c45e4';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pin_out';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {BG_LED_1, BG_LED_2, BG_LED_3, BG_LED_4, BG_LED_5, BG_LED_6, BG_LED_7, BG_LED_8}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/bar_graph.c';
      var-mem-desc-line = '14';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/src/bar_graph.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'lsa_8c';
  file-name = 'lsa.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'lsa_8c_1ae100292bb09dfe139df0cafc36ef19fd';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_line_sensor';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/lsa.c';
      func-mem-desc-line = '5';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
enables and configures adc
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param none

@return esp_err_t i.e it shows if adc is initialised successfully or not
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'lsa_8c_1a3db021dc5dafaf9643129580e2b17ea2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
line_sensor_array
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_line_sensor';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/lsa.c';
      func-mem-desc-line = '11';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get multisampled line sensor array readings.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param none

@return Returns a pointer to a struct that contains multisampled adc readings 
        for all the pins specified in lsa_pins array
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'lsa_8c_1a562fb80fd8fb21d608a04ff792eab99b';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'line_sensor_pins';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {LSA_A0, LSA_A1, LSA_A2, LSA_A3}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/lsa.c';
      var-mem-desc-line = '3';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/src/lsa.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'motor__driver_8c';
  file-name = 'motor_driver.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8c_1a9fc3907d0ee8196eca819e1e5e1c6977';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_motor_driver_a';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      func-mem-desc-line = '7';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables Motor driver A in Parallel or Normal Mode.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param mode if mode = 1 is passed, motor driver is operated in parallel mode, if mode = 2 is passed, motor driver is operated in normal mode
@return esp_err_t returns ESP_OK if motor driver initialised properly, else it returns ESP_ERR_INVALID_ARG 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8c_1a11c7858cdd467a4bbcff436e43a585e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_motor_driver_b';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      func-mem-desc-line = '83';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables Motor driver B in Parallel or Normal Mode.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param mode if mode = 1 is passed, motor driver is operated in parallel mode, if mode = 2 is passed, motor driver is operated in normal mode
@return esp_err_t returns ESP_OK if motor driver initialised properly, else it returns ESP_ERR_INVALID_ARG 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8c_1a7f29277a8306338a778cd11d99433eb1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'set_motor_speed_helper';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'direction';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'duty_cycle';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mcpwm_unit_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mcpwm_num';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mcpwm_timer_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'timer_num';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      func-mem-desc-line = '159';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8c_1a027943094f99f52b1ea067ab85384686';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'set_motor_speed';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'motor_id';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'direction';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'duty_cycle';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      func-mem-desc-line = '195';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the speed of motors.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param motor_id set it as MOTOR_A_0, MOTOR_A_1, MOTOR_B_0, MOTOR_B_1 to select the appropriate motor to set its speed and direction
@param direction set is as MOTOR_FORWARD for forward motion, MOTOR_BACKWARD for backward motion, MOTOR_STOP to stop the motor
@param duty_cycle set the duty cycle of the motor driver PWM
@return esp_err_t returns ESP_OK if speed correctly, ESP_FAIL if any error occurs
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8c_1ae7ed1b0e385fe871d79ac02fc5177768';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_motor_driver_mode_a';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      func-mem-desc-line = '240';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reads mode of motor driver A.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return int returns mode of motor driver A, 1 = Parallel mode, 2 = Normal mode
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'motor__driver_8c_1a61b75cb1eb76f0a02144746799c6b3e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_motor_driver_mode_b';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      func-mem-desc-line = '245';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reads mode of motor driver B.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return int returns mode of motor driver B, 1 = Parallel mode, 2 = Normal mode
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'motor__driver_8c_1a8fcaec0ebdaf902608c2c55dd047cc6b';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const char *
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'TAG_MOTOR_DRIVER';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "motor_driver"
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      var-mem-desc-line = '3';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'motor__driver_8c_1aa7773c94ae40290aa934c7fb3b243e0a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mode_motor_driver_a';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      var-mem-desc-line = '4';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'motor__driver_8c_1a214718d6a8178ee9f2a66f4689080507';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mode_motor_driver_b';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
      var-mem-desc-line = '5';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/src/motor_driver.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mpu6050_8c';
  file-name = 'mpu6050.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1adbeb61fe3c40b09ee1b6de91f21cb6ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'i2c_master_init';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '6';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initialise the ESP32 I2C Driver in Master Mode.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t returns ESP_OK if I2C driver initialised properly, ESP_ERR_INVALID_ARG for Parameter error, ESP_FAIL Driver for install error 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1a044ec3e6d6e04c8c1624a2f89ac4d7ec';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_mpu6050';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '25';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initialise MPU-6050 (by sending the appropriate queued commands); 
Refer this for more information: https://invensense.tdk.com/wp-content/uploads/2015/02/MPU-6000-Datasheet1.pdf.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t returns ESP_OK if MPU-6050 initialised successfully, else the appropriate error code
Refer this for more info on ESP32 I2C Error codes: https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/i2c.html
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1a37ca4429a23f8b7da14122cc381516b3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mpu6050_read_acce';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data_rd';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the accelerometer raw values (Ax, Ay, Az) into an 8-bit array
Note that these raw values are actually 16-bit, split into MSB (Byte) and LSB (Byte), sent one after the other.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param data_rd Buffer array for storing raw values
@param size Size of the buffer array (6 in our case)
@return esp_err_t returns ESP_OK if acceleromter read successfully, else the appropriate error code 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1a6a709a3acda468f8ec109f09a3148a3a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mpu6050_read_gyro';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data_rd';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '62';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the gyroscope raw values (Gx, Gy, Gz) into an 8-bit array
Note that these raw values are actually 16-bit, split into MSB (Byte) and LSB (Byte), sent one after the other.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param data_rd Buffer array for storing raw values
@param size Size of the buffer array (6 in our case)
@return esp_err_t returns ESP_OK if gyroscope read successfully, else the appropriate error code
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1abb35efd200ff172bedad87a7ec590c7a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'combine_msb_lsb_raw_data';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf_1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf_2';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '84';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Combine two 8-bit values to a 16-bit one
Note that EVEN indices in the input buffer represent the MSB (Byte)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param buf_1 8-bit Input array of size 6
@param buf_2 16-bit Output array of size 3
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1aca3594a71e8ba8621f3968ee93cc457e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'compute_acce_angle';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ax';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ay';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'az';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acce_angle';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '94';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Compute the Euler angle (Pitch and Roll) from the accelerometer raw values
Axes and Angles - X: Roll, Y: Pitch, Z: Yaw.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param ax Raw accelerometer value (X-axis)
@param ay Raw accelerometer value (Y-axis)
@param az Raw accelerometer value (Z-axis)
@param acce_angle Resultant angle array 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1a4b805f4cb3c30a323969abe87414ea90';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'compute_gyro_angle';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gy';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gz';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gyro_angle';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '101';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Compute the Euler angle (Pitch and Roll) from the gyroscope raw values
Axes and Angles - X: Roll, Y: Pitch, Z: Yaw
More on this here: https://philsal.co.uk/projects/imu-attitude-estimation.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param gx Raw gyroscope value (X-axis)
@param gy Raw gyroscope value (Y-axis)
@param gz Raw gyroscope value (Z-axis)
@param dt Sampling time for gyroscope readings (interval between 2 readings)
@param gyro_angle Resultant angle array
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1a7d1dcecaa06dcaa7586e8802546ab65c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_mpu6050_raw';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acce_raw_value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gyro_raw_value';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '118';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A wrapper for reading the 8-bit raw values from MPU and then combining them to their final form 
i.e. 16-bit.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param acce_raw_value 16-bit array for storing the accelerometer raw values
@param gyro_raw_value 16-bit array for storing the gyroscope raw values
@return esp_err_t returns ESP_OK if successful, else the appropriate error code
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1a43b01d95c708717047b47d408a606323';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'complementary_filter';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acce_raw_value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gyro_raw_value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'complementary_angle';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mpu_offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '133';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fuse the gyroscope and accelerometer angle in a complementary fashion
More on this here: https://robotics.stackexchange.com/questions/10746/complimentary-filter-issues.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param acce_raw_value Raw values from the accelerometer
@param gyro_raw_value Raw values from the gyroscope
@param complementary_angle Resultant fused and filtered angle
@param mpu_offset Offset of the MPU (accelerometer) at rest position
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mpu6050_8c_1a2103bceaa1a91be4c8bdbe49cbc22c34';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_mpu6050';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'euler_angle';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mpu_offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      func-mem-desc-line = '169';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The ultimate function (application ready); takes in the input raw values and initial conditions and gives out the complementary pitch and roll angles.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param euler_angle Input array of angles to store the results in (passed by reference)
@param mpu_offset Initial conditions for the accelerometer and gyroscope (Angle at rest position)
@return esp_err_t returns ESP_OK if successful, else the appropriate error code
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'mpu6050_8c_1ab48a7997f8dce4ee930a82b44e4c9e70';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const char *
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'TAG_MPU';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "mpu_6050"
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
      var-mem-desc-line = '3';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/src/mpu6050.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'servo_8c';
  file-name = 'servo.c';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'servo_8c_1a70fb9b3e7d410312baf880c1292f43ba';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'STR';
      define-mem-param  = {
        define-mem-def-name = 'A';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
#A
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/servo.c';
      define-mem-desc-line = '5';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'servo_8c_1af4079acff4a8c5a298d79d841fe96b80';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_servo';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/servo.c';
      func-mem-desc-line = '7';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables Servo port on the sra board, sets up PWM for the three pins in servo port.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t - returns ESP_OK if servo pins initialised, else it returns ESP_ERR_INVALID_ARG 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'servo_8c_1a7df1fd536e3aeeba366ae8a542878cd5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'set_angle_servo_helper';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'servo_name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'servo_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'servo_min_pulsewidth';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'servo_max_pulsewidth';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'degree_of_rotation';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mcpwm_unit_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mcpwm_num';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mcpwm_timer_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'timer_num';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mcpwm_generator_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gen';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/servo.c';
      func-mem-desc-line = '44';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'servo_8c_1a424f7770de8a5b81a1a1b8361ac4bf0f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'set_angle_servo';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'servo_id';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'degree_of_rotation';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/servo.c';
      func-mem-desc-line = '64';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the angle of the servos attached to the servo port of SRA Board.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param servo_id pin number of the servo whose angle needs to be set
@param degree_of_rotation angle to which the servo must be set, depends on value of MAX_DEGREE macro
@return esp_err_t 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'servo_8c_1a782ddd6cf38e2f841ac4daaf9604319c';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const char *
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'TAG_SERVO';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "servo"
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/servo.c';
      var-mem-desc-line = '3';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'servo_8c_1a23cd83a8e8989910cf696b9226d0a495';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'enabled_servo_flag';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/servo.c';
      var-mem-desc-line = '4';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/src/servo.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'switches_8c';
  file-name = 'switches.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'switches_8c_1a70de1897315528e8b85d34aa23341f39';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
esp_err_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'enable_switches';
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/switches.c';
      func-mem-desc-line = '6';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enables tactile switches on the sra board, sets up required gpio's in input pull-up mode.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return esp_err_t - returns ESP_OK if gpio's initialised, else it returns ESP_ERR_INVALID_ARG 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'switches_8c_1aa394f2692a1f424f79d5c3dcfa0d7bc6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'read_switch';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'switch_id';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/switches.c';
      func-mem-desc-line = '36';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reads the state of one of the four switches on sra board.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param switch_id id of the switch which needs to be read, we can pass the following macros: SWITCH_1, SWITCH_2, SWITCH_3, SWITCH_4. 
@return int - returns state of the switch, 1 if it is pressed and 0 if it is not pressed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'switches_8c_1ac00d65aab541451923cc2fc80893786e';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const char *
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'TAG_SWITCHES';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "switches"
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/switches.c';
      var-mem-desc-line = '3';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'switches_8c_1afaf2bf69f5d546816dbfe97da4b74e48';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'enabled_switches_flag';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/switches.c';
      var-mem-desc-line = '4';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/src/switches.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'utils_8c';
  file-name = 'utils.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'utils_8c_1a22fd7311bf5f09376f4c561febd38899';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'bound';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/utils.c';
      func-mem-desc-line = '3';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Bound a value in a range [min, max].
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param val  value to be bound
@param min  min value which the variable can take
@param max  max value which the variable can take
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'utils_8c_1a5dd929afde45581ef0588e30db9650f8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'map';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_lower_limit';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_higher_limit';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_lower_limit';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_higher_limit';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/vedant/Programming/projects/sra-board-component/src/utils.c';
      func-mem-desc-line = '12';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Maps a value in range [input_lower_limit, input_higher_limit] to [output_lower_limit, output_higher_limit].
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param val          value to be mapped
@param input_lower_limit    min value of val 
@param input_higher_limit   max value of val
@param output_lower_limit   input_lower_limit is mapped to output_lower_limit
@param output_higher_limit  input_higher_limit is mapped to output_higher_limit
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/vedant/Programming/projects/sra-board-component/src/utils.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
